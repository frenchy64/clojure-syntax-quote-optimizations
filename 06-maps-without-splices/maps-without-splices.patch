From 16a0bc4e1da5916dca4b1a6724167f90df3d6332 Mon Sep 17 00:00:00 2001
From: GitHub Copilot <copilot@github.com>
Date: Wed, 8 Oct 2025 06:49:08 +0000
Subject: [PATCH] Optimize syntax-quote for maps without splices

Optimize syntax-quoted maps without unquote-splicing to use (hash-map ...)
instead of (apply hash-map (seq (concat ...))).

For example: `{:a ~x :b ~y} => (hash-map :a x :b y)
instead of (apply hash-map (seq (concat (list :a x) (list :b y))))

---
 src/jvm/clojure/lang/LispReader.java | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/src/jvm/clojure/lang/LispReader.java b/src/jvm/clojure/lang/LispReader.java
index 8d7079cf..79ed65c9 100644
--- a/src/jvm/clojure/lang/LispReader.java
+++ b/src/jvm/clojure/lang/LispReader.java
@@ -1093,7 +1093,13 @@ public static class SyntaxQuoteReader extends AFn{
 			else if(form instanceof IPersistentMap)
 				{
 				IPersistentVector keyvals = flattenMap(form);
-				ret = RT.list(APPLY, HASHMAP, RT.list(SEQ, RT.cons(CONCAT, sqExpandList(keyvals.seq()))));
+				ISeq seq = keyvals.seq();
+				// `{~@k ~@v} => (apply hash-map (seq (concat k v)))
+				if(hasSplice(seq))
+					ret = RT.list(APPLY, HASHMAP, RT.list(SEQ, RT.cons(CONCAT, sqExpandList(seq))));
+				// `{k v} => (hash-map `k `v ...)
+				else
+					ret = RT.cons(HASHMAP, sqExpandList(seq));
 				}
 			else if(form instanceof IPersistentVector)
 				{
@@ -1147,6 +1153,16 @@ public static class SyntaxQuoteReader extends AFn{
 		return ret.seq();
 	}
 
+	// returns true iff seq contains ~@
+	private static boolean hasSplice(ISeq seq) {
+		for(; seq != null; seq = seq.next())
+			{
+			if(isUnquoteSplicing(seq.first()))
+				return true;
+			}
+		return false;
+	}
+
 	private static IPersistentVector flattenMap(Object form){
 		IPersistentVector keyvals = PersistentVector.EMPTY;
 		for(ISeq s = RT.seq(form); s != null; s = s.next())
-- 
2.51.0

