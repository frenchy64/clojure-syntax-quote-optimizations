From 6bc1cb974c2d0ce06109bb3ed1d4a4c49d93b7ed Mon Sep 17 00:00:00 2001
From: GitHub Copilot <copilot@github.com>
Date: Wed, 8 Oct 2025 22:45:26 +0000
Subject: [PATCH] Add sqExpandFlat helper for map/set literal optimizations

Add sqExpandFlat helper function to expand sequences for map and set
literals without wrapping unquoted values in lists. This infrastructure
is used by singleton maps and sets with distinct constants optimizations.

---
 src/jvm/clojure/lang/LispReader.java | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/src/jvm/clojure/lang/LispReader.java b/src/jvm/clojure/lang/LispReader.java
index 8d7079cf..0c28b3b8 100644
--- a/src/jvm/clojure/lang/LispReader.java
+++ b/src/jvm/clojure/lang/LispReader.java
@@ -1147,7 +1147,23 @@ public static class SyntaxQuoteReader extends AFn{
 		return ret.seq();
 	}
 
-	private static IPersistentVector flattenMap(Object form){
+	// Helper function for flattening seq for map/set literals
+// Expands unquotes directly (no wrapping in list)
+private static ISeq sqExpandFlat(ISeq seq) {
+PersistentVector ret = PersistentVector.EMPTY;
+for(; seq != null; seq = seq.next())
+{
+Object item = seq.first();
+if(isUnquote(item) || isUnquoteSplicing(item))
+ret = ret.cons(RT.second(item));
+else
+ret = ret.cons(syntaxQuote(item));
+}
+return ret.seq();
+}
+
+
+private static IPersistentVector flattenMap(Object form){
 		IPersistentVector keyvals = PersistentVector.EMPTY;
 		for(ISeq s = RT.seq(form); s != null; s = s.next())
 			{
-- 
2.51.0

