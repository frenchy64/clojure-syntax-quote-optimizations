name: Syntax-Quote Optimization Experiments

on:
  push:
  workflow_dispatch:

jobs:
  optimization-experiments:
    name: ${{ matrix.optimization.title }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        optimization:
          - name: nil
            title: "Nil Optimization"
            dir: "01-nil-optimization"
            script: "01-nil-optimization.sh"
          - name: boolean
            title: "Boolean Optimization"
            dir: "02-boolean-optimization"
            script: "01-boolean-optimization.sh"
          - name: empty-collection
            title: "Empty Collection Optimization"
            dir: "03-empty-collection-optimization"
            script: "01-empty-collection-optimization.sh"
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Read Clojure version
      id: clojure-version
      run: |
        source CLOJURE_VERSION
        echo "commit=${CLOJURE_COMMIT}" >> $GITHUB_OUTPUT
        echo "Using Clojure commit: ${CLOJURE_COMMIT}"
    
    - name: Set up Java 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: maven-${{ runner.os }}-${{ steps.clojure-version.outputs.commit }}
        restore-keys: |
          maven-${{ runner.os }}-
    
    - name: Install reproducible build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y strip-nondeterminism
    
    - name: Run ${{ matrix.optimization.title }} Experiment
      run: |
        cd ${{ matrix.optimization.dir }}/experiments/uberjar-comparison
        bash ${{ matrix.optimization.script }}
    
    - name: Upload experiment results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.optimization.name }}-optimization-results
        path: ${{ matrix.optimization.dir }}/experiments/uberjar-comparison/results/01-${{ matrix.optimization.name }}-optimization/
        retention-days: 90
    
    - name: Display Results Summary
      if: always()
      run: |
        RESULTS_DIR="${{ matrix.optimization.dir }}/experiments/uberjar-comparison/results/01-${{ matrix.optimization.name }}-optimization"
        if [ -f "$RESULTS_DIR/summary.txt" ]; then
          echo "### ${{ matrix.optimization.title }} Results" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat "$RESULTS_DIR/summary.txt" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Verify Results Match Expected
      if: github.event_name == 'push'
      run: |
        RESULTS_DIR="${{ matrix.optimization.dir }}/experiments/uberjar-comparison/results/01-${{ matrix.optimization.name }}-optimization"
        
        # Verify experiment completed successfully
        if [ ! -f "$RESULTS_DIR/summary.txt" ]; then
          echo "ERROR: Experiment did not generate expected results"
          exit 1
        fi
        
        # Check that both JARs were analyzed
        if [ ! -f "$RESULTS_DIR/baseline.jar" ]; then
          echo "ERROR: Baseline JAR not found"
          exit 1
        fi
        
        if [ ! -f "$RESULTS_DIR/optimized.jar" ]; then
          echo "ERROR: Optimized JAR not found"
          exit 1
        fi
        
        # Check for class differences report
        if [ ! -f "$RESULTS_DIR/class-differences.txt" ]; then
          echo "WARNING: Class differences report not found"
        fi
        
        echo "✓ Experiment completed successfully"
        echo "✓ All expected artifacts generated"
